package com.example.sskey.dms;

import android.app.AlertDialog;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.sskey.dms.data.remote.APIUtils;
import com.sskey.dms.data.remote.SOService;
import com.sskey.dms.data.remote.SucceedUpdate;
import com.sskey.dms.model.BalanceSum;
import com.sskey.dms.utils.PreferenceUtils;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import dmax.dialog.SpotsDialog;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

public class BalanceSumActivity extends Fragment {

    EditText edtIDBS, edtSalesDate, edtSalesMan, edtTotal, edtDailyAmount;
    Button btnEditDailyAmount;
    SOService service;

    Date date = Calendar.getInstance().getTime();
    SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
    String strDate = formatter.format(date);
    int page = 1;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_balance_sum);


    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        View v = inflater.inflate(R.layout.activity_balance_sum, container, false);
        edtIDBS = v.findViewById(R.id.input_id_sum);
        edtSalesDate = v.findViewById(R.id.input_salesDate);
        edtSalesMan = v.findViewById(R.id.input_salesMan);
        edtTotal = v.findViewById(R.id.input_totalBalance);
        edtDailyAmount = v.findViewById(R.id.input_inputDailyAmount);
        //init api
        service = APIUtils.getSOService();

        btnEditDailyAmount = v.findViewById(R.id.editDailyToTal);

        String idSale = PreferenceUtils.getMaNguoiDung(getActivity());

//        if(!edtTotal.getText().toString().equals("")){
//            btnEditDailyAmount.setVisibility(View.VISIBLE);
//        }
//        btnEditDailyAmount.setVisibility(View.INVISIBLE);

        loadInfo(idSale);

        btnEditDailyAmount.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //create dialog --> show
                final AlertDialog.Builder builder = new AlertDialog.Builder(v.getContext());

                TextView title = new TextView(getActivity());
                title.setText("Thông tin thay đổi");
                title.setTextSize(20);
                title.setGravity(Gravity.CENTER);

                builder.setCustomTitle(title);

                // Inflate the layout for this activity
                LayoutInflater inflater = LayoutInflater.from(v.getContext());
                final View edit_layout = inflater.inflate(R.layout.edit_balancesum_layout, null);

                final EditText edt_DailyAmount = edit_layout.findViewById(R.id.editSoThucTe);

                Button btn_save = (Button) edit_layout.findViewById(R.id.btn_saveInformBS);


//                edt_DailyAmount.setText(edtDailyAmount.getText());
                final BalanceSum sum = new BalanceSum();
//                sum.setIDBS(edtIDBS.getText().toString());
//                sum.setSalesDate(edtSalesDate.getText().toString());
//                sum.setSalesMan(edtSalesMan.getText().toString());
//                sum.setInputDailyAmount(edtDailyAmount.getText().toString());
//                sum.setTotalBalance(edtTotal.getText().toString());

//                sum.setIDBS("1");
                sum.setSalesDate("02/02/2018");
                sum.setSalesMan("4");
//                sum.setInputDailyAmount("");
                sum.setTotalBalance("22");

//                if(sum==null){
//                    btn_save.setVisibility(View.GONE);
//                }else{
//                    btn_save.setVisibility(View.VISIBLE);
//                }
                //set view for dialog --> get layout --> use dialog --> lets show and dismiss
                builder.setView(edit_layout);
                final AlertDialog dialog = builder.create();
                btn_save.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {

                        sum.setInputDailyAmount(edt_DailyAmount.getText().toString());

                        //init API --> delare
//                        service = APIUtils.getSOService();

                        //Check null text
//                        if (TextUtils.isEmpty(edt_DailyAmount.getText().toString())) {
//                            Toast.makeText(getContext(), "Vui lòng nhập số tiền", Toast.LENGTH_SHORT).show();
//                        }

                        //show dialog please...
                        final AlertDialog waitingDialog = new SpotsDialog(getActivity());
                        waitingDialog.show();
                        waitingDialog.setMessage("Vui lòng đợi...");

                        service.updateBS(sum).enqueue(new Callback<Integer>() {
                            @Override
                            public void onResponse(Call<Integer> call, Response<Integer> response) {
                                //check response value
                                if (response.body().equals(1)) {
                                    edtDailyAmount.setText(edt_DailyAmount.getText());
                                    dialog.dismiss();
                                    waitingDialog.dismiss();
                                    Toast.makeText(getContext(), "Bạn đã thay đổi thông tin thành công", Toast.LENGTH_SHORT).show();

                                } else {
                                    dialog.dismiss();
                                    waitingDialog.dismiss();
                                    Toast.makeText(getContext(), "Cập nhật không thành công vui lòng kiểm tra lại", Toast.LENGTH_SHORT).show();
                                }
                            }

                            @Override
                            public void onFailure(Call<Integer> call, Throwable t) {

                            }
                        });
                        
//                        service.saveBS(sum).enqueue(new Callback<BalanceSum>() {
//                            @Override
//                            public void onResponse(Call<BalanceSum> call, Response<BalanceSum> response) {
//
//                                if (response.message().equals("OK")) {
//                                    edtDailyAmount.setText(edt_DailyAmount.getText());
//                                    dialog.dismiss();
//                                    waitingDialog.dismiss();
//                                    Toast.makeText(getContext(), "Bạn đã thay đổi thông tin thành công", Toast.LENGTH_SHORT).show();
//
//                                } else {
//                                    dialog.dismiss();
//                                    waitingDialog.dismiss();
//                                    Toast.makeText(getContext(), "Cập nhật không thành công vui lòng kiểm tra lại", Toast.LENGTH_SHORT).show();
//                                }
//                            }
//
//                            @Override
//                            public void onFailure(Call<BalanceSum> call, Throwable t) {
//
//                            }
//                        });

                    }
                });
                dialog.show();

            }
        });

        return v;
    }

    private void loadInfo(String idSale) {
        service.getListBySaleDate(page, idSale, strDate).enqueue(new Callback<BalanceSum>() {
            @Override
            public void onResponse(Call<BalanceSum> call, Response<BalanceSum> response) {
                if (response.body() != null) {
                    BalanceSum sum;
                    sum = response.body();
                    edtIDBS.setText(sum.getIDBS());
                    edtSalesDate.setText(sum.getSalesDate());
                    edtSalesMan.setText(sum.getSalesMan());
                    edtDailyAmount.setText(sum.getInputDailyAmount());
                    edtTotal.setText(sum.getTotalBalance());
                } else
                    Toast.makeText(getActivity(), "Chưa có đơn hàng thanh toán", Toast.LENGTH_SHORT).show();

            }

            @Override
            public void onFailure(Call<BalanceSum> call, Throwable t) {
                Toast.makeText(getActivity(), "Kiểm tra kết nối! Không có dữ liệu", Toast.LENGTH_SHORT).show();

            }
        });

    }
}
